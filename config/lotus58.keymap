/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
    combos {
        compatible = "zmk,combos";
        combo_dsklg {
            timeout-ms = <100>;
            key-positions = <24 52>;
            layers = <0>;
            bindings = <&kp LGUI>;
        };        
    };

    behaviors {
        suprfunc: supr_func {
            compatible = "zmk,behavior-mod-morph";
            label = "SUPR_FUNC";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sleft: s_left {
            compatible = "zmk,behavior-mod-morph";
            label = "S_LEFT";
            #binding-cells = <0>;
            bindings = <&kp S>, <&kp LEFT>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        fright: f_right {
            compatible = "zmk,behavior-mod-morph";
            label = "R_RIGHT";
            #binding-cells = <0>;
            bindings = <&kp F>, <&kp RIGHT>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
//   ------------------------------------------------------------------------------------------------------------
// |   &   |  é  |  "   |  '   |  (   | -                         |  è   |  _    |  ç    |  à   |   )   |   =   | 
// |  TAB  |  A  |  Z  |  E   |  R   |  T   |                     |  Y   |  U    |  I    |  O   |   P   |   ^   | 
// |  SFT  |  Q  |  S  |  D   |  F   |  G   |  RESET   |  | RESET |  H   |  J    |  K    |  L   |   M   | ù SFT | 
// |  CTRL |  Z  |  X  |  C   |  V   |  B   |  >       |  | echap |  N   |  ,    |  ;    |   :  |   !   | * CTRL| 
//                     |win|  layer 2| alt |space shift|  |ENTER  | altgr|layer 1| suppr |                        
            bindings = <
&kp N1    &kp N2  &kp N3   &kp N4     &kp N5    &kp N6                                          &kp N7    &kp N8      &kp N9    &kp N0   &kp MINUS  &kp EQUAL
&kp TAB   &kp Q   &kp W    &kp E      &kp R     &kp T                                           &kp Y     &kp U       &kp I     &kp O    &kp P      &kp LBKT
&kp LSHFT &kp A   &sleft   &kp D      &fright   &kp G      &reset                     &reset    &kp H     &kp J       &kp K     &kp L    &kp SEMI   &mt RSHFT SQT
&kp LCTRL &kp Z   &kp X    &kp C      &kp V     &kp B      &kp NON_US_BACKSLASH       &kp ESC   &kp N     &kp M       &kp COMMA &kp DOT  &kp FSLH   &mt RCTRL BSLH
                        &kp LEFT_GUI  &tog 2   &kp LALT    &mt LSHFT SPACE            &kp ENTER &kp RALT  &tog 1      &suprfunc     
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// |   1   |  2  |  3  |  4   |  5   |  6   |                   |  7   |  8    |  9  |   0  |   )   | =     |
// |       |  !  |  ^  |HOME  |  END |  %   |                   | VOL^ |  PGUP |  ^  |  ^   |  PSCR |   -   |
// |  none |  <- |  v  | ->   |  #   | $    |        |  |       | VOLv |    <- |   v |  ->  |   ~   |   _   |
// |       |  cut| copy| paste|      |      |        |  |       | MUTE |  PGDN | INS |  :   |   *   |   |   |
//                     |      |      |      |        |  |       |      |       |     |       
            bindings = <
&kp LS(N1) &kp LS(N2)  &kp LS(N3) &kp LS(N4)  &kp LS(N5) &kp LS(N6)                               &kp LS(N7)      &kp LS(N8) &kp LS(N9)   &kp LS(N0)  &kp LS(MINUS)    &kp LS(EQUAL)
&trans     &kp EXCL    &kp UP     &kp HOME    &kp END    &kp PRCNT                                &kp C_VOL_UP    &kp PG_UP  &kp UP       &kp CARET   &kp PSCRN        &kp MINUS
&none      &kp LEFT    &kp DOWN   &kp RIGHT   &kp HASH   &kp LS(NUMBER_4)  &trans           &trans        &kp C_VOL_DN    &kp LEFT   &kp DOWN     &kp RIGHT   &kp TILDE        &kp UNDER
&trans     &kp K_CUT   &kp K_COPY &kp K_PASTE &trans     &trans    &trans           &kp DELETE    &kp C_MUTE      &kp PG_DN  &trans       &trans    &trans          &trans 
                                  &trans      &trans     &trans    &kp SPACE        &trans        &trans          &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_NEXT C_PREV>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |F1     |  F2  |  F3  |  F4  |  F5  | F6     |                      | F7    |  F8   |  F9    |  F10 |  F11  |  F12  |
// |       |Insert| undo | menu | reset|        |                      |  redo |       |   ^    |      |       |       |
// |       | ALT  | CTRL | $    | boot |CapsLock|        |  |          |       |  <-   |   v    |  ->  |   DEL | BSPC  |
// |       |  cut | copy | paste|      |        |        |  |          |       | play  |Previous| next |       |       |
//                       |      |      |        |        |  |          |       |       |        |       
            bindings = <
&kp F1      &kp F2      &kp F3       &kp F4         &kp F5          &kp F6                                &kp F7        &kp F8        &kp F9        &kp F10    &kp F11  &kp F12
&trans      &kp INS     &kp K_UNDO   &kp K_CMENU    &reset          &trans                                &kp K_REDO    &trans        &kp UP        &trans     &trans   &trans
&trans      &kp LALT    &kp LCTRL    &kp DOLLAR     &bootloader     &kp CLCK   &trans           &trans    &trans        &kp LEFT      &kp DOWN      &kp RIGHT  &kp DEL  &kp BSPC
&trans      &kp K_CUT   &kp K_COPY   &kp K_PASTE    &trans          &trans     &trans           &trans    &trans        &kp C_PP      &kp C_PREV    &kp C_NEXT &trans   &trans
                                     &trans         &trans          &trans     &trans           &trans    &trans        &trans        &trans 
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        then-layer {
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |OUTTOG|OUTUSB| OUTBT  |      | RESET | FLASH |
// |     | INS  |UNDO  | GUI   | RESET |      |                | PGUP |      |   ^    |      |       |       |
// |     | ALT  | CTRL | SHIFT | FLASH | CAPS |      |  |      | PGDN |   <- |   v    |  ->  |  DEL  | BSPC  |
// |     | CUT  | COPY | PASTE |       |      |      |  |      |      |  play|Previous| next |       |       |
//                     |       |       |      |      |  |      |      |      |        |       
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                           &out OUT_TOG  &out OUT_USB  &out OUT_BLE  &trans     &reset  &bootloader
&trans     &kp INS      &kp K_UNDO   &kp K_CMENU  &reset       &trans                                 &kp PG_UP     &trans        &kp UP        &trans     &trans  &trans
&trans     &kp LALT     &kp LCTRL    &kp DOLLAR   &bootloader  &kp CLCK     &trans          &trans    &kp PG_DN     &kp LEFT      &kp DOWN      &kp RIGHT  &kp DEL &kp BSPC
&trans     &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans       &trans       &trans          &trans    &trans        &kp C_PP      &kp C_PREV    &kp C_NEXT &trans  &trans
                                     &trans       &trans       &trans       &trans          &trans    &trans        &trans        &trans   
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
